{"version":3,"sources":["index.js"],"names":["timerFace","document","querySelector","CountdownTimer","selector","targetDate","start","isActive","intervalId","setInterval","currentTime","Date","now","deltaTime","time","getTime","console","log","textContent","days","hours","mins","secs","pad","Math","floor","value","String","padStart"],"mappings":";;;;;AAmDA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAnDA,QAAA,oBAEA,IAAMA,EAAYC,SAASC,cAAc,YAGnCC,EAAAA,WACkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BA,KAAAA,WAAaA,EACbD,KAAAA,SAAWH,SAASC,cAAcE,GAClCE,KAAAA,QA0CT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAvCE,MAAA,WAAQ,IAAA,EAAA,KACF,KAAKC,WAIJA,KAAAA,UAAW,EAEXC,KAAAA,WAAaC,YAAY,WACtBC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKR,WAAYK,EAC7BI,EAAO,EAAKC,QAAQF,GAE1BG,QAAQC,IAAIH,GAEZ,EAAKV,SAASF,cAAc,2BAA2BgB,YAAcJ,EAAKK,KAC1E,EAAKf,SAASF,cAAc,4BAA4BgB,YAAcJ,EAAKM,MAC3E,EAAKhB,SAASF,cAAc,2BAA2BgB,YAAcJ,EAAKO,KAC1E,EAAKjB,SAASF,cAAc,2BAA2BgB,YAAcJ,EAAKQ,MACzE,QAqBP,CAAA,IAAA,UAjBE,MAAA,SAAQR,GAOC,MAAA,CAAEK,KANI,KAAKI,IAAIC,KAAKC,MAAMX,EAAQ,QAM1BM,MALD,KAAKG,IACjBC,KAAKC,MAAOX,EAAQ,MAAyB,OAIzBO,KAFT,KAAKE,IAAIC,KAAKC,MAAOX,EAAQ,KAAoB,MAElCQ,KADf,KAAKC,IAAIC,KAAKC,MAAOX,EAAQ,IAAc,SAW5D,CAAA,IAAA,MAPE,MAAA,SAAIY,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAMrC,EA9CMzB,GA8CN,IAAIA,EAAe,CAACC,SAAU,WAAYC,WAAY,IAAIM,KAAK","file":"src.27f9fdf3.js","sourceRoot":"../src","sourcesContent":["import './scss/main.scss';\n\nconst timerFace = document.querySelector(\"#timer-1\");\n\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.targetDate = targetDate;\n    this.selector = document.querySelector(selector);\n    this.start();\n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n   \n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = this.targetDate -currentTime;\n      const time = this.getTime(deltaTime);\n\n      console.log(time);\n\n      this.selector.querySelector('span[data-value=\"days\"]').textContent = time.days;\n      this.selector.querySelector('span[data-value=\"hours\"]').textContent = time.hours;\n      this.selector.querySelector('span[data-value=\"mins\"]').textContent = time.mins;\n      this.selector.querySelector('span[data-value=\"secs\"]').textContent = time.secs;\n    }, 1000);\n  }\n\n\n  getTime(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, \"0\");\n  }\n\n}\n\n\nnew CountdownTimer({selector: \"#timer-1\", targetDate: new Date(\"Jul 17, 2021\")});\n"]}